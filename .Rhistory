tpe_highSchools2[[689]] <-"北一女"
tpe_highSchools2 -> tpe_highSchools
tpe_highSchools
tpe_highSchools2 <-tpe_highSchools
levels(tpe_highSchools2) <- c(levels(tpe_highSchools2), "北一女")
tpe_highSchools2[[680]] <-"北一女"
tpe_highSchools2[[681]] <-"北一女"
tpe_highSchools2[[682]] <-"北一女"
tpe_highSchools2[[683]] <-"北一女"
tpe_highSchools2[[684]] <-"北一女"
tpe_highSchools2[[685]] <-"北一女"
tpe_highSchools2[[686]] <-"北一女"
tpe_highSchools2[[687]] <-"北一女"
tpe_highSchools2[[688]] <-"北一女"
tpe_highSchools2[[689]] <-"北一女"
tpe_highSchools2 -> tpe_highSchools
tpe_highSchools
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
unique(courseStructure) ->majorGradeCombos
majorGradeCombos
unique(courseStructure$應修系級) ->majorGradeCombos
majorGradeCombos
stringr::str_detect(courseStructure$應修系級,"系"）->majorGradeCombos
stringr::str_detect(courseStructure$應修系級,"系"）-> majorGradeCombos
stringr::str_detect(courseStructure$應修系級,"系") <- majorGradeCombos
str_detect(courseStructure$應修系級,"系") <- majorGradeCombos
str_detect(courseStructure$應修系級,"系") ->  majorGradeCombos
majorGradeCombos
str_extract(courseStructure$應修系級,"系") -> majorGradeCombos
majorGradeCombos
str_extract(courseStructure$應修系級,"系") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"系") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
pick_class <-str_detect(courseStructure$應修系級,"經濟系3")
courseStructure$科目名稱[pick_class] -> econ101junior
econ101junior
pick_class <-str_detect(courseStructure$應修系級,"經濟系3")
unique(courseStructure$科目名稱[pick_class]) -> econ101junior
econ101junior
View(data228)
View(data228)
str_detect(data228$附註,"表冊名稱:臺灣省二二八事變正法及死亡人犯名冊") -> pick_victims
unique(data228$個人名稱[pick_victims]) -> victims
victims
table("吳金練")
# documentCount_eachVictim
table("吳金練")
table( "吳斐如")
table("吳金練")
table("吳金練")
# documentCount_eachVictim
str_detect(courseStructure$應修系級,"系") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"系") -> pickk
unique(courseStructure$應修系級[pickk]) ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"系") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
picka<-"吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228[picka])
picka<-"吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228$個人名稱[picka])
picka<-"吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228$個人名稱[picka])
picka<-"吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228$個人名稱[picka])
picka<-data228$個人名稱=="吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228$個人名稱[picka])
picka<-data228$個人名稱=="吳金練"
pickb<-"吳斐如"
pickc<-"李瑞峰"
pickd<-"李瑞漠"
picke<-"阮朝日"
pickf<-"林介"
pickg<-"邱金山"
pickh<-"施江南"
picki<-"涂光明"
pickj<-"張宗仁"
pickl<-"許錫謙"
pickm<-"陳忻"
pickn<-"陳能通"
picko<-"陳澄波"
pickp<-"曾鳳鳴"
pickq<-"湯德章"
pickr<-"黃何純"
picks<-"黃媽典"
pickt<-"葉秋木"
picku<-"廖進井"
pickv<-"潘木枝"
pickw<-"盧鈉欽"
pickx<-"蘇憲章"
sum(data228$個人名稱[picka])
regex_hs1st <-"臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-"高?級?中?學"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-"高?級?中?學?"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-"(中|高|高級中學)"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <-"(中|高|高級中學)"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
# 目標是前面的唧唧
target_regex <- "唧唧"
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
phrase <- c("唧唧复唧唧")
# 目標是前面的唧唧
target_regex <- "唧唧"
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
# 目標是前面的唧唧
target_regex <- "唧唧"
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
# 目標是前面的唧唧
target_regex <- "唧唧"
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$"|"{b_regex}$"|"c_regex")
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","c_regex")
regex_hsTitle
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle <-"(中|高|高級中學)"
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle <-"(中|高|高級中學)"
#a_regex<-"中"
#b_regex <-"高"
#c_regex <-"高級中學"
#regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle <-"(中|高|高級中學)"
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
tpe_highSchools <- factor(tpe_highSchools,c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學") )
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
tpe_highSchools <- factor(tpe_highSchools,c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學") )
tpe_highSchools
tpe_highSchools2 <-tpe_highSchools
levels(tpe_highSchools2) <- c(levels(tpe_highSchools2), "北一女")
tpe_highSchools2[[680]] <-"北一女"
tpe_highSchools2[[681]] <-"北一女"
tpe_highSchools2[[682]] <-"北一女"
tpe_highSchools2[[683]] <-"北一女"
tpe_highSchools2[[684]] <-"北一女"
tpe_highSchools2[[685]] <-"北一女"
tpe_highSchools2[[686]] <-"北一女"
tpe_highSchools2[[687]] <-"北一女"
tpe_highSchools2[[688]] <-"北一女"
tpe_highSchools2[[689]] <-"北一女"
tpe_highSchools2 -> tpe_highSchools
tpe_highSchools
regex_hs1st <-"臺?台?北市?立?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
#a_regex<-"中"
#b_regex <-"高"
#c_regex <-"高級中學"
#regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle <-"(中|高|高級中學)"
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
#a_regex<-"中"
#b_regex <-"高"
#c_regex <-"高級中學"
#regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle
a_regex<-"中"
b_regex <-"高"
c_regex <-"高級中學"
regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
# 目標是後面的唧唧
target_regex2 <- "唧唧"
pattern <- glue::glue("{target_regex2}$")
print(pattern)
str_view(phrase, pattern)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
levels(data228) <-c(levels(data228),"全宗名編號","年")
data228[["全宗名編號"]] <- factor(str_sub(data228$檔號,1,11))
data228[["年"]] <- factor(str_sub(data228$檔號,15,16))
data228[c("全宗名編號","年")]
str_detect(courseStructure$應修系級,"系") -> pickk
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
str_detect(courseStructure$應修系級,"系","[\u4E00-\u9FFF]+[:graph:]") -> pickk
str_detect(courseStructure$應修系級,"[\u4E00-\u9FFF]+[:graph:]") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"[\u4E00-\u9FFF]+[:graph:]") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"[:graph:]") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
str_detect(courseStructure$應修系級,"系") -> pickk
courseStructure$應修系級[pickk] ->majorGradeCombos
majorGradeCombos
#a_regex<-"中"
#b_regex <-"高"
#c_regex <-"高級中學"
#regex_hsTitle <-glue::glue("{a_regex}$","{b_regex}$","{c_regex}")
regex_hsTitle<-"(中?高?高級中學?)$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
knitr::opts_chunk$set(echo = TRUE)
# p=1.2的需求量
p=1.2
qd <- 10-5*p # 小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
library(lubridate)
dateInput <- lubridate::today()
locationInput <- "新北市"
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
# 找出符合地點的天氣資訊：weatherAtLocation
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location # 可挑出locationInput的「要/不要」向量
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
# 在weatherAtLocation找出符合時間的天氣資訊
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市",today())
askSilly_weather("花蓮縣",today())
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics$functionsCreated$demand(1.2)
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
# 移除global environment裡的intercept及slope
rm(intercept, slope)
knitr::opts_chunk$set(echo = TRUE)
# 先執行此行輸入學號
studentId <- readline(prompt = "請輸入你的學號")
# 先執行此行輸入學號
studentId <- readline(prompt = "請輸入你的學號")
